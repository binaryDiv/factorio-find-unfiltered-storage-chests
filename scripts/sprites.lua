-- Generate a warning icon sprite for an entity and return it (caller needs to save it!)
function create_warning_icon(entity)
    return rendering.draw_sprite {
        target = entity,
        surface = entity.surface,
        sprite = "fusc-no-filter-warning-icon",
        render_layer = "entity-info-icon-above",
    }
end

-- Generate an acknowledged icon sprite for an entity and return it (caller needs to save it!)
function create_acknowledged_icon(entity)
    -- Offset to move the acknowledged icon into the bottom-left corner of the entity
    local offset_x = -0.25
    local offset_y = 0.25

    -- For containers larger than 1 tile, it looks better to slightly move the icon further away from the corner, so
    -- we center the icon on the bottom-left tile instead of cramming it into the corner.
    if entity.tile_width > 1 then
        offset_x = -entity.tile_width / 2 + 0.5
    end
    if entity.tile_height > 1 then
        offset_y = entity.tile_height / 2 - 0.5
    end

    return rendering.draw_sprite {
        target = {
            entity = entity,
            offset = { offset_x, offset_y },
        },
        surface = entity.surface,
        sprite = "fusc-acknowledged-icon",
        render_layer = "entity-info-icon-above",
    }
end

-- Clear any icon sprite from an entity (if it has one)
function clear_entity_icon_sprite(entity)
    if storage.entity_icon_sprites[entity.unit_number] ~= nil then
        storage.entity_icon_sprites[entity.unit_number].destroy()
        storage.entity_icon_sprites[entity.unit_number] = nil
    end
end

-- Destroys all sprites generated by this mod and clears the list of sprites
function clear_all_sprites()
    -- Clear all render objects created by this mod
    rendering.clear(script.mod_name)

    -- Clear list of sprites
    storage.entity_icon_sprites = {}
end
